version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: proyecto-postgres-dev
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-proyecto_db}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-dev-network

  api:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: proyecto-de-grado-api-dev
    ports:
      - "${PORT:-4000}:${PORT:-4000}"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=${PORT:-4000}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_DATABASE=${DB_DATABASE:-proyecto_db}
    command: npm run dev
    networks:
      - backend-dev-network

networks:
  backend-dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local