version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ${DB_CONTAINER_NAME:-recoagua-postgres}
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-recoagua_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE:-recoagua_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-recoagua_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${API_CONTAINER_NAME:-proyecto-de-grado-api}
    restart: unless-stopped
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4000

      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-recoagua_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE:-recoagua_db}
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local