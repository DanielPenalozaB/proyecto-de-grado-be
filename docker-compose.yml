services:
  postgres:
    image: postgres:16-alpine
    container_name: proyecto-postgres
    restart: unless-stopped
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=proyecto_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proyecto-de-grado-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=4001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=proyecto_db
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.recoagua.com`)
      - traefik.http.routers.api.entrypoints=https
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      - traefik.http.services.api.loadbalancer.server.port=4001
    networks:
      - backend-network




networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local